// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+`",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "alt+m",
        "command": "gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
        "key": "alt+b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
        "key": "alt+b",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+f12",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+m n",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "workbench.action.joinTwoGroups"
    },
    {
        "key": "ctrl+] ]",
        "command": "editor.emmet.action.matchTag"
    },
    {
        "key": "alt+v alt+v",
        "command": "toggleVim"
    },
    {
        "key": "alt+r alt+r",
        "command": "workbench.action.terminal.runSelectedText"
    },
    {
        "key": "alt+d",
        "command": "editor.action.revealDeclaration"
    },
    {
        "key": "ctrl+l",
        "command": "expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+w",
        "when": "!editorIsOpen && !multipleEditorGroups",
        "command": "workbench.action.quit"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+up",
        "command": "git.stage",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+down",
        "command": "git.unstage",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+m m",
        "command": "workbench.action.maximizeEditor"
    },
    {
        "key": "alt+k k",
        "command": "git.commit"
    },
    {
        "key": "ctrl+k k",
        "command": "trunk.formatFile"
    },
    {
        "key": "ctrl+shift+g d",
        "command": "git.clean"
    },
    {
        "key": "ctrl+shift+g o",
        "command": "git.openChange"
    },
    {
        "key": "tab",
        "command": "-extension.vim_tab",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+r",
        "command": "redo"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "vim.active && textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "vim.active && textInputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "vim.active && inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "vim.active && inQuickOpen"
    },
    {
        "key": "ctrl+shift+q",
        "command": "git.openFile",
        "when": "editorFocus && isInDiffEditor"
    },
    {
        "key": "ctrl+shift+q",
        "command": "git.openChange",
        "when": "editorFocus && !isInDiffEditor"
    },
    {
        "key": "ctrl+g ctrl+r",
        "command": "git.revertSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+alt+z",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
]